<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hm.entity.Storage_record">

	<resultMap type="Storage_record" id="storage_recordMap">
		<id column="id" property="id"/>
		<result column="category_id" property="category_id"/>
		<result column="product_name" property="product_name"/>
		<result column="storage_number" property="storage_number"/>
		<result column="storage_price" property="storage_price"/>
		<result column="one_price" property="one_price"/>
		<result column="storage_date" property="storage_date"/>
		<result column="storage_quarter" property="storage_quarter"/>
		<result column="storage_employee" property="storage_employee"/>
	</resultMap>
	
	<sql id="mysql">
		id,category_id,product_name,storage_number,storage_price,one_price,storage_date,storage_quarter,storage_employee
	</sql>
	
	<!-- 根据id查询User -->
	<!-- id:当前sql语句的唯一标示  parameterType：参数类型 resultType:结果类型(返回值类型)-->
	<select id="selectStorage_recordById" parameterType="Integer" resultMap="storage_recordMap">
		select <include refid="mysql"/> from storage_record where id = #{id}
	</select>
	
	<!-- 查询所有User -->
	<select id="selectAllStorage_records" resultType="Storage_record">
		select <include refid="mysql"/> from storage_record
	</select>
	
	<!-- 根据id查询User，返回值为：Map -->
	<select id="selectStorage_recordByIdForMap" parameterType="string" resultType="hashmap">
		select <include refid="mysql"/> from storage_record where id = #{id}
	</select>
	
	<!-- 动态sql -->
	<select id="selectStorage_recordByCondition" parameterType="Storage_record" resultType="Storage_record">
		select id,category_id,product_name,storage_number,storage_price,one_price,storage_date,storage_quarter,storage_employee from storage_record where 1=1
		<if test="id != null">
			and id = #{id}
		</if>
		<!-- userName指的是实体的属性 -->
		<if test="category_id != null">
			and category_id = #{category_id}
		</if>
		<if test="product_name != null">
			and product_name = #{product_name}
		</if>
		<if test="storage_number != null">
			and storage_number = #{storage_number}
		</if>
		<if test="storage_price != null">
			and storage_price = #{storage_price}
		</if>
		<if test="one_price != null">
			and one_price = #{one_price}
		</if>
		<if test="storage_date != null">
			and storage_date = #{storage_date}
		</if>
		<if test="storage_quarter != null">
			and storage_quarter = #{storage_quarter}
		</if>
		<if test="storage_employee != null">
			and storage_employee = #{storage_employee}
		</if>
	</select>
	
	<!-- 动态sql 
	<select id="selectUserByCondition2" parameterType="User" resultType="User">
		select id,name as userName ,address from user
		<where>
			<if test="id != null">
			   id = #{id}
			</if>
			 userName指的是实体的属性
			<if test="userName != null">
				and name = #{userName}
			</if>
			<if test="address != null">
				and address = #{address}
			</if>
		</where>
	</select>
	-->
	
	<!-- 插入User -->
	<insert id="insertStorage_record" parameterType="Storage_record">
		insert into storage_record (category_id,product_name,storage_number,storage_price,one_price,storage_date,storage_quarter,storage_employee) values (#{category_id},#{product_name},#{storage_number},#{storage_price},#{one_price},#{storage_date},#{storage_quarter},#{storage_employee});
	</insert>
	
	<!-- 插入User 参数为hashmap-->
	<insert id="insertStorage_recordForMap" parameterType="hashmap">
		insert into storage_record (category_id,product_name,storage_number,storage_price,one_price,storage_date,storage_quarter,storage_employee) values (#{category_id},#{product_name},#{storage_number},#{storage_price},#{one_price},#{storage_date},#{storage_quarter},#{storage_employee});
	</insert>
	
	<!-- 根据id删除User -->
	<delete id="deleteStorage_recordById" parameterType="string">
		delete from storage_record where id = #{id}
	</delete>
	
	<!-- 根据id更新User -->
	<update id="updateStorage_recordById" parameterType="Storage_record">
		update storage_record set category_id = #{category_id},product_name = #{product_name},storage_number = #{storage_number},storage_price = #{storage_price},one_price = #{one_price},storage_date = #{storage_date},storage_quarter = #{storage_quarter},storage_employee = #{storage_employee} where id = #{id}
	</update>
	
	<!-- 动态更新user -->
	<update id="updateStorage_recordByCondition" parameterType="Storage_record">
		update storage_record 
		<set>
			<if test="category_id != null">
				category_id = #{category_id},
			</if>
			<if test="product_name != null">
				product_name = #{product_name}
			</if>
			<if test="storage_number != null">
				storage_number = #{storage_number}
			</if>
			<if test="storage_price != null">
				storage_price = #{storage_price}
			</if>
			<if test="one_price != null">
				one_price = #{one_price}
			</if>
			<if test="storage_date != null">
				storage_date = #{storage_date}
			</if>
			<if test="storage_quarter != null">
				storage_quarter = #{storage_quarter}
			</if>
			<if test="storage_employee != null">
				storage_employee = #{storage_employee}
			</if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 根据id更新User 参数为map
	<update id="updateUserByIdForMap" parameterType="hashmap">
		update user set name = #{userName},address = #{address} where id = #{id}
	</update>
	-->
	
</mapper>